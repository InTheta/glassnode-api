// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Glassnode.Api.Responses;
//
//    var futuresTerm = FuturesTerm.FromJson(jsonString);

namespace Glassnode.Api.Responses
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class FuturesTerm
    {
        [JsonProperty("expiration_dates", NullValueHandling = NullValueHandling.Ignore)]
        public ExpirationDates ExpirationDates { get; set; }

        [JsonProperty("prices", NullValueHandling = NullValueHandling.Ignore)]
        public ExpirationDates Prices { get; set; }

        [JsonProperty("t", NullValueHandling = NullValueHandling.Ignore)]
        public long? T { get; set; }
    }

    public partial class ExpirationDates
    {
        [JsonProperty("binance", NullValueHandling = NullValueHandling.Ignore)]
        public double[] Binance { get; set; }

        [JsonProperty("bybit", NullValueHandling = NullValueHandling.Ignore)]
        public double[] Bybit { get; set; }

        [JsonProperty("deribit", NullValueHandling = NullValueHandling.Ignore)]
        public double[] Deribit { get; set; }

        [JsonProperty("ftx", NullValueHandling = NullValueHandling.Ignore)]
        public long[] Ftx { get; set; }

        [JsonProperty("huobi", NullValueHandling = NullValueHandling.Ignore)]
        public double[] Huobi { get; set; }

        [JsonProperty("okex", NullValueHandling = NullValueHandling.Ignore)]
        public double[] Okex { get; set; }
    }
}
